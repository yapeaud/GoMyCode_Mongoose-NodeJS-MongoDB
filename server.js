// Importation du module Express pour crÃ©er une application web
const express = require('express');

// Importation de la fonction connectDB pour Ã©tablir la connexion Ã  MongoDB
const connectDB = require('./config/db');

// Chargement des variables d'environnement depuis le fichier .env
require('dotenv').config();

// CrÃ©ation de l'application Express
const app = express();

// Connexion Ã  MongoDB en appelant la fonction connectDB
connectDB();

// Middleware pour parser les donnÃ©es JSON dans les requÃªtes entrantes
// Cela permet de rÃ©cupÃ©rer les donnÃ©es du corps de la requÃªte (req.body) au format JSON
app.use(express.json());

// Utilisation des routes dÃ©finies dans le fichier personRoutes
// Toutes les routes dÃ©finies dans personRoutes seront prÃ©fixÃ©es par "/api/person"
app.use('/api/person', require('./routes/personRoutes'));

// Route GET pour la racine de l'API ("/")
// Cela sert de point de vÃ©rification pour s'assurer que l'API fonctionne
app.get('/', (req, res) => {
  res.send("API en cours d'exÃ©cution...");
});

// DÃ©finition du port sur lequel le serveur Ã©coutera
// Utilisation de la variable d'environnement PORT si elle est dÃ©finie, sinon 5000 par dÃ©faut
const PORT = process.env.PORT || 5000;

// DÃ©marrage du serveur et Ã©coute sur le port spÃ©cifiÃ©
app.listen(PORT, () => console.log(`ğŸš€ Serveur lancÃ© sur http://localhost:${PORT}/`));